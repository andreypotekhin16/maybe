# Generated by Django 5.2.1 on 2025-07-15 15:00

from django.db import migrations

def link_orbibol_to_profile(apps, schema_editor):
    """
    Эта функция находит единственный объект CompanyProfile и единственный
    объект OrbibolInfo и связывает их между собой.
    """
    CompanyProfile = apps.get_model('main', 'CompanyProfile')
    OrbibolInfo = apps.get_model('main', 'OrbibolInfo')

    # Мы предполагаем, что на момент выполнения миграции в базе
    # существует только по одному экземпляру каждой из этих моделей.
    # Это безопасно для вашей текущей конфигурации "синглтона".
    try:
        profile = CompanyProfile.objects.first()
        orbibol_info = OrbibolInfo.objects.first()

        if profile and orbibol_info:
            # Присваиваем профиль полю company_profile в OrbibolInfo
            orbibol_info.company_profile = profile
            orbibol_info.save()
            
    except CompanyProfile.DoesNotExist:
        # Если профиль компании еще не создан, ничего не делаем.
        pass
    except OrbibolInfo.DoesNotExist:
        # Если настроек орбибола нет, тоже ничего не делаем.
        pass

def reverse_link_orbibol(apps, schema_editor):
    """
    Функция для отката миграции. В данном случае, мы просто
    убираем связь, делая поле company_profile пустым (NULL).
    """
    OrbibolInfo = apps.get_model('main', 'OrbibolInfo')
    # Отвязываем все записи от профилей
    OrbibolInfo.objects.update(company_profile=None)


class Migration(migrations.Migration):

    dependencies = [
        
        ('main', '0032_alter_companyprofile_options_and_more'),
    ]

    operations = [
        migrations.RunPython(link_orbibol_to_profile, reverse_code=reverse_link_orbibol),
    ]